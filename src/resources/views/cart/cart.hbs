<div class="container py-5">
  <h1 class="mb-4 text-center" style="color: #ff5722;">Giỏ hàng của bạn</h1>
  <table class="table table-hover">
    <thead>
      <tr>
        <th scope="col">Sản phẩm</th>
        <th scope="col">Số lượng</th>
        <th scope="col">Giá</th>
        <th scope="col">Tổng cộng</th>
      </tr>
    </thead>
    <tbody>
  {{#if cart.items}}
    {{#each cart.items}}
      <tr>
        <td>
          {{#if this.productId}}
            {{this.productId.name}}
          {{else if this.comboId}}
            {{this.comboId.name}}
          {{else}}
            <span class="text-danger">Không có thông tin</span>
          {{/if}}
        </td>
       <td>
  <div class="product-quantity-container">
    <input type="hidden" class="item-id" value="{{#if this.productId}}{{this.productId._id}}{{else}}{{this.comboId._id}}{{/if}}">
    <button class="btn-minus" data-action="minus">-</button>
    <span class="quantity-display">{{this.quantity}}</span>
    <button class="btn-plus" data-action="plus">+</button>
  </div>
</td>

        <td>
          {{#if this.productId.price}}
            {{this.productId.price}} VND
          {{else if this.comboId.price}}
            {{this.comboId.price}} VND
          {{else}}
            <span class="text-danger">N/A</span>
          {{/if}}
        </td>
        <td>
          {{#if this.productId.price}}
            {{formatPrice this.productId.price this.quantity}}
          {{else if this.comboId.price}}
            {{formatPrice this.comboId.price this.quantity}}
          {{else}}
            <span class="text-danger">N/A</span>
          {{/if}}
        </td>
        <td>
          <div class="product-quantity-container">
    <input type="hidden" class="item-id" value="{{#if this.productId}}{{this.productId._id}}{{else}}{{this.comboId._id}}{{/if}}">
   <button class="btn-remove" data-action="remove">x</button>
  </div>
          </td>
      </tr>
    {{/each}}
  {{else}}
    <tr>
      <td colspan="4" class="text-center">Giỏ hàng của bạn đang trống</td>
    </tr>
  {{/if}}
</tbody>


    <tfoot>
      <tr>
        <th colspan="3" class="text-end">Tổng cộng</th>
        <th>
          {{cart.totalPrice}}
        </th>
      </tr>
    </tfoot>
  </table>
  <div class="text-center mt-4">
    {{!-- <a href="/cart/payment"> --}}
    <button
      class="checkout-btn"
      data-bs-toggle="modal"
      data-bs-target="#paymentModal"
    >Tiến hành thanh toán</button>
    {{!-- </a> --}}
  </div>

  <!-- Payment Modal -->
    <div class="modal fade" id="paymentModal" tabindex="-1" aria-labelledby="paymentModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="paymentModalLabel">Chọn phương thức thanh toán</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Chọn phương thức thanh toán bạn muốn:</p>
                    <div class="d-flex justify-content-around mt-4">
                        <div id="qrBtn" class="payment-option">
                            <img src="./906232d07a04c25a9b15.jpg" alt="QR Code" style="width: 50px;">
                            <p>QR Code</p>
                        </div>
                        <div id="cashBtn" class="payment-option">
                            <i class="fas fa-money-bill-alt fa-2x"></i>
                            <p>Thanh toán khi nhận hàng</p>
                        </div>
                    </div>

                    <!-- QR Code Payment Option -->
                    <div id="qrSection" class="text-center">
                        <p>Quét mã QR để hoàn tất thanh toán:</p>
                        <img src="./906232d07a04c25a9b15.jpg" alt="QR Code" class="img-fluid mx-auto d-block"
                            style="max-width: 200px;">
                    </div>

                    <!-- Cash on Delivery Form -->
                    <form id="cashForm" class="mt-4"
                    method="POST" action="cart/payment">
                        <div class="mb-3">
                            <label for="name" class="form-label">Tên</label>
                            <input type="text" class="form-control" id="name" name="name" required>
                        </div>
                        <div class="mb-3">
                            <label for="phone" class="form-label">Số điện thoại</label>
                            <input type="tel" class="form-control" id="phone" name="phone" required pattern="[0-9]{10}">
                        </div>
                        <div class="mb-3">
                            <label for="address" class="form-label">Địa chỉ</label>
                            <input type="text" class="form-control" id="address" name="address" required>
                        </div>
                        <div class="mb-3">
                            <label for="email" class="form-label">Email</label>
                            <input type="email" class="form-control" id="email" name="email" required>
                        </div>
                        <button type="submit" class="btn btn-primary w-100 mt-3">Xác nhận đơn hàng</button>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
 document.querySelectorAll(".btn-minus").forEach((button) => {
  button.addEventListener("click", async (event) => {
    const container = event.target.closest(".product-quantity-container");
    const itemId = container.querySelector(".item-id").value;

    try {
      const response = await fetch("/cart/minus", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ itemId }),
      });

      const result = await response.json();

      if (result.success) {
        console.log("Item quantity reduced successfully:", result.cart);

        // Reload lại trang để đảm bảo giao diện được cập nhật
        window.location.reload();
      } else {
        console.error("Failed to reduce item quantity:", result.message);
        alert(result.message);
      }
    } catch (error) {
      console.error("Error reducing item quantity:", error);
      alert("Đã xảy ra lỗi khi giảm số lượng.");
    }
});
  });
// plus cart=====================================
  document.querySelectorAll(".btn-plus").forEach((button) => {
  button.addEventListener("click", async (event) => {
    const container = event.target.closest(".product-quantity-container");
    const itemId = container.querySelector(".item-id").value;

    try {
      const response = await fetch("/cart/plus", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ itemId }),
      });

      const result = await response.json();

      if (result.success) {
        console.log("Item quantity reduced successfully:", result.cart);

        // Reload lại trang để đảm bảo giao diện được cập nhật
        window.location.reload();
      } else {
        console.error("Failed to reduce item quantity:", result.message);
        alert(result.message);
      }
    } catch (error) {
      console.error("Error reducing item quantity:", error);
      alert("Đã xảy ra lỗi khi giảm số lượng.");
    }
  });


});
// delete item of cart=====================================
document.querySelectorAll(".btn-remove").forEach((button) => {
  button.addEventListener("click", async (event) => {
    const container = event.target.closest(".product-quantity-container");
    const itemId = container.querySelector(".item-id").value;

    try {
      const response = await fetch("/cart/delete", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ itemId }), // Gửi itemId trong body
      });

      const result = await response.json();

      if (result.success) {
        console.log("Item quantity reduced successfully:", result.cart);

        // Reload lại trang để đảm bảo giao diện được cập nhật
        window.location.reload();
      } else {
        console.error("Failed to reduce item quantity:", result.message);
        alert(result.message);
      }
    } catch (error) {
      console.error("Error reducing item quantity:", error);
      alert("Đã xảy ra lỗi khi giảm số lượng.");
    }
  });
});

  
 // Add scroll event to change navbar style
        window.onscroll = function () {
            var navbar = document.querySelector('.navbar');
            if (document.body.scrollTop > 50 || document.documentElement.scrollTop > 50) {
                navbar.classList.add('scrolled');
            } else {
                navbar.classList.remove('scrolled');
            }
        };
   
        // Toggle between QR code and Cash on Delivery sections
        document.getElementById("qrBtn").addEventListener("click", function () {
            document.getElementById("qrSection").style.display = "block";
            document.getElementById("cashForm").style.display = "none";
            this.classList.add("selected");
            document.getElementById("cashBtn").classList.remove("selected");
        });

        document.getElementById("cashBtn").addEventListener("click", function () {
            document.getElementById("cashForm").style.display = "block";
            document.getElementById("qrSection").style.display = "none";
            this.classList.add("selected");
            document.getElementById("qrBtn").classList.remove("selected");
        });

</script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js"></script>  
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
